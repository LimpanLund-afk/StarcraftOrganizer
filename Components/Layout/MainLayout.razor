@using Microsoft.AspNetCore.Components.Authorization
@using StarcraftOrganizer.Components.Shared.Sidebar
@using StarcraftOrganizer.Data.Entities
@using StarcraftOrganizer.Infra
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject AuthService AuthService

@inherits LayoutComponentBase

<div class="flex h-screen bg-gradient-to-br from-[#0a0a23] via-[#1f1f3c] to-black text-white">
    <AuthorizeView>
        <Authorized>
            <SideBar SignedInPlayer="SignedInPlayer" OnLogout="Logout" />
        </Authorized>
        <NotAuthorized>
            <p>Du är inte inloggad.</p>
        </NotAuthorized>
    </AuthorizeView>

    <main class="flex-1 overflow-y-auto px-4 py-6 sm:px-6 lg:px-2">
        @Body
    </main>
</div>

@code {
    private Player? SignedInPlayer;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            SignedInPlayer = new Player
            {
                UserName = user.Identity.Name ?? "Okänd"
               
            };
        }
        else
        {
            SignedInPlayer = null;
        }
    }

    private async Task Logout()
    {
        await AuthService.Logout();  // Din egen logout-metod som t ex nollställer UserSession i localStorage
        NavigationManager.NavigateTo("/");
    }
}
