@using Microsoft.AspNetCore.Components.Authorization
@using StarcraftOrganizer.Components.Shared.Sidebar
@using StarcraftOrganizer.Data.Entities
@using StarcraftOrganizer.Infra
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject AuthService AuthService

@inherits LayoutComponentBase

<div class="flex h-screen bg-gradient-to-br from-[#0a0a23] via-[#1f1f3c] to-black text-white">

    <SideBar SignedInPlayer="SignedInPlayer" OnLogout="Logout" />

    <main class="flex-1 overflow-y-auto px-4 py-6 sm:px-6 lg:px-2">
        @Body
    </main>
</div>

@code {
    private Player? SignedInPlayer;
    private bool _initialized;
   
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            if (user.Identity?.IsAuthenticated == true)
            {
                SignedInPlayer = new Player
                    {
                        UserName = user.Identity?.Name ?? "Okänd"
                    };
            }
            else
            {
                SignedInPlayer = null;
            }

            _initialized = true;
            StateHasChanged(); // Trigga omrendering
        }
    }

    private async Task Logout()
    {
        await AuthService.Logout();
        SignedInPlayer = null;
        NavigationManager.NavigateTo("/");
    }
}
