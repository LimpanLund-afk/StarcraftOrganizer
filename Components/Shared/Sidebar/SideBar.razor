@using Microsoft.AspNetCore.Components.Authorization
@using StarcraftOrganizer.Data.Entities
@inject NavigationManager NavigationManager;


<button @onclick="ToggleSidebar"
class="fixed top-4 left-4 p-2 z-[60] md:hidden text-white bg-gray-800/60 rounded-md shadow-lg backdrop-blur-sm">
    <div class="hamburger @(isSidebarOpen ? "open" : "")" aria-label="Växla meny" aria-expanded="@isSidebarOpen.ToString().ToLower()">
        <span></span>
        <span></span>
        <span></span>
    </div>
</button>


<div class="fixed top-0 left-0 z-50 h-screen w-64
            bg-[#1f1f3c] shadow-lg
            transition-transform duration-300 ease-in-out
            @(isSidebarOpen ? "translate-x-0" : "-translate-x-full")
            md:static  md:translate-x-0 md:shadow-none md:shrink-0">

    <nav class="flex flex-col h-full p-4 text-white/90 overflow-y-auto">

        <div class="mb-8 text-center">
            <img src="/Images/logo.png" alt="Logo" />
        </div>


        <div class="flex flex-col">
            <a href="/" class="block p-2 rounded hover:bg-white/10 transition-colors" @onclick='() =>HandleLinkClick("/")' @onclick:preventDefault>Home</a>
            <a href="/Players" class="block p-2 rounded hover:bg-white/10 transition-colors" @onclick='() =>HandleLinkClick("/Players")' @onclick:preventDefault>Spelare</a>
            <a href="/Maps" class="block p-2 rounded hover:bg-white/10 transition-colors" @onclick='() =>HandleLinkClick("/Maps")' @onclick:preventDefault>Maps</a>
        </div>


        <div class="mt-auto border-t border-white b-1 pt-4">
            <AuthorizeView>
                <Authorized>
                    <div class="text-sm text-white/70 mb-2">
                        Inloggad som <strong>@SignedInPlayer.UserName</strong>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div class="text-sm text-white/70 mb-2">
                        Du är inte inloggad. <a href="/login" class="underline">Logga in här</a>.
                    </div>
                </NotAuthorized>
            </AuthorizeView>
            @if(SignedInPlayer != null)
            {
                <button @onclick="LogOut" class="w-full text-left p-2 rounded text-red-400 hover:text-red-300 hover:bg-white/10 transition-colors">
                    Logga ut
                </button>
            }         
        </div>
    </nav>
</div>


<style>
    .hamburger {
    position: relative; 
    width: 24px;
    height: 18px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    }

    .hamburger span {
    display: block;
    height: 3px; 
    width: 100%;
    background-color: white; 
    transition: transform 0.3s ease, opacity 0.3s ease;
    border-radius: 1px; 
    }

    .hamburger.open span:nth-child(1) {
    transform: translateY(7.5px) rotate(45deg);
    }

    .hamburger.open span:nth-child(2) {
    opacity: 0;
    }

    .hamburger.open span:nth-child(3) {
    transform: translateY(-7.5px) rotate(-45deg);
    }
</style>

@code {
    private bool isSidebarOpen = false;



    [Parameter] 
    public Player? SignedInPlayer { get; set; }

    [Parameter]
    public EventCallback<bool> OnLogout { get; set; }

    private void ToggleSidebar()
    {
        isSidebarOpen = !isSidebarOpen;
    }


    private async Task HandleLinkClick(string url)
    {
        if (isSidebarOpen)
        {
            isSidebarOpen = false;
            StateHasChanged(); 
        }

        NavigationManager.NavigateTo(url);
    }

    private void LogOut()
    {
        OnLogout.InvokeAsync(true);

        if (isSidebarOpen)
        {
            isSidebarOpen = false;
        }
    }
}