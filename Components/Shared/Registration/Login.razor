@page "/login"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using StarcraftOrganizer.Data.Entities

@inject SignInManager<Player> SignInManager
@inject NavigationManager NavigationManager

@attribute [AllowAnonymous]

<Page>
    <ChildContent>
       <h3 class="text-2xl font-semibold mb-6 text-center">Logga in</h3>

    <div class="flex items-center justify-center min-h-screen">
        <div class="w-full max-w-md p-8 bg-opacity-0 rounded shadow-md">
            <EditForm Model="@loginModel" OnValidSubmit="HandleLogin" >
                <div class="mb-8">
                    <label class="block text-sm font-medium mb-1">Användarnamn</label>
                    <InputText @bind-Value="loginModel.UserName" class="w-full px-4 py-2 border border-gray-600 bg-transparent text-white rounded focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>
                <div class="mb-8">
                    <label class="block text-sm font-medium mb-1">Lösenord</label>
                    <InputText @bind-Value="loginModel.Password" type="password" class="w-full px-4 py-2 border border-gray-600 bg-transparent text-white rounded focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>

                <div class="flex flex-col justify-center">
                    <button type="submit" class="px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700 transition w-auto hover:cursor-pointer">
                        Logga in
                    </button>
                </div>

            </EditForm>
                <div class="text-center mt-6">
                    <span class="text-sm text-gray-400">Har du inget konto?</span>
                    <a href="/register" class="text-sm text-blue-400 hover:underline ml-1">Registrera dig här</a>
                </div>
        </div>
    </div>
    </ChildContent>
</Page>

@code {
    private LoginModel loginModel = new();

    private async Task HandleLogin()
    {
        var result = await SignInManager.PasswordSignInAsync(loginModel.UserName, loginModel.Password, isPersistent: false, false);
        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("/");
        }
    }

    private class LoginModel
    {
        public string UserName { get; set; }
        public string Password { get; set; }
    }
 }
